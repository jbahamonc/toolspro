---
interface FAQItem {
  question: string;
  answer: string;
}

interface Props {
  faqs: FAQItem[];
}

const { faqs } = Astro.props;
---

<div class="faq-section">
  <h2>Preguntas <span class="highlight">Frecuentes</span></h2>
  
  <div class="faq-list">
    {faqs.map((faq, index) => (
      <div class="faq-item">
        <button 
          class="faq-question" 
          aria-expanded="false"
          aria-controls={`faq-answer-${index}`}
        >
          {faq.question}
          <i class="ph ph-caret-down"></i>
        </button>
        <div 
          class="faq-answer" 
          id={`faq-answer-${index}`}
          hidden
        >
          <p>{faq.answer}</p>
        </div>
      </div>
    ))}
  </div>
</div>

<style>
  .faq-list {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin-top: 1.5rem;
  }

  .faq-item {
    border: 1px solid var(--color-border);
    border-radius: 0.75rem;
    overflow: hidden;
    background: white;
  }

  .faq-question {
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 1.75rem;
    background: none;
    border: none;
    cursor: pointer;
    font-size: 1.625rem;
    font-weight: 700;
    color: var(--color-text);
    text-align: left;
    font-family: var(--font-headings);
  }

  .faq-question i {
    font-size: 1.25rem;
    transition: transform 0.3s ease;
  }

  .faq-question[aria-expanded="true"] {
    border-bottom: 1px solid var(--color-border);
  }

  .faq-question[aria-expanded="true"] i {
    transform: rotate(180deg);
  }

  .faq-answer {
    padding: 1.5rem 1.75rem;
    background: white;
  }

  .faq-answer p {
    color: #666;
    line-height: 1.6;
    font-size: 1.2rem;
    font-family: var(--font-headings);
    font-weight: 500;
  }
</style>

<script>
  const questions = document.querySelectorAll('.faq-question');

  questions.forEach(question => {
    question.addEventListener('click', () => {
      const answer = question.nextElementSibling as HTMLElement;
      const isExpanded = question.getAttribute('aria-expanded') === 'true';
      
      // Cerrar todas las respuestas
      questions.forEach(q => {
        if (q !== question && q.nextElementSibling instanceof HTMLElement) {
          q.setAttribute('aria-expanded', 'false');
          q.nextElementSibling.style.display = 'none';
        }
      });
      
      // Alternar la respuesta actual
      question.setAttribute('aria-expanded', (!isExpanded).toString());
      answer.style.display = isExpanded ? 'none' : 'block';
    });
  });
</script>
